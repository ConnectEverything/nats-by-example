[1A[1B[0G[?25l



[1A[1B[0G[?25l[+] Building 0.0s (0/0)                                                         
[?25h
A. Legacy Push Subscription with Ephemeral Consumer
  Async
      Received events.1
      Received events.2
      Received events.3
  Sync
      Read events.1
      Read events.2
      Read events.3

B. Legacy Bind Subscription to Named Consumer.
   Received events.1
   Received events.2
   Received events.3

C. Legacy Pull Subscription then Iterate
   The call to `iterate(10, 2000)` returned in 2ms.
   Processing events.1 2ms after start.
   Processing events.2 3ms after start.
   Processing events.3 3ms after start.
   The iterate completed in 2004ms.
       Time reflects waiting for the entire batch, which isn't available.

D. Simplification StreamContext
   Stream Name: migration
   Stream Subjects: [Subject{name='events.1', count=1}, Subject{name='events.2', count=1}, Subject{name='events.3', count=1}]

E. Simplification, Create a Consumer
   A consumer was created on stream "migration"
   The consumer name is "vDwA32dwL9".
   The consumer has 3 messages available.
   The ConsumerContext for "vDwA32dwL9" was loaded from the StreamContext for "migration"
   The ConsumerContext for "vDwA32dwL9" was loaded from the Connection on the stream "migration"

F. MessageConsumer (endless consumer with handler)
   A consumer was created on stream "migration"
   The consumer name is "vDwA32dwPN".
   The consumer has 3 messages available.
   Received events.1
   Received events.2
   Received events.3
   stop was called.

G. IterableConsumer (endless consumer manually calling next)
   A consumer was created on stream "migration"
   The consumer name is "vDwA32dwTb".
   The consumer has 3 messages available.
   Received events.1
   Received events.2
   Received events.3
   stop was called.

H. FetchConsumer (bounded consumer)
   A consumer was created on stream "migration"
   The consumer name is "vDwA32dwXp".
   The consumer has 3 messages available.
   'fetch' returned in 3ms.
   Processing events.1 4ms after start.
   Processing events.2 4ms after start.
   Fetch complete in 5ms.

I. next (1 message)
   Received events.3
